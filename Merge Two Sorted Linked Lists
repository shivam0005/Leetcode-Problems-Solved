//Updating nodes is allowed
Node* sortList(Node *head)
{
    int zeroCount=0;
    int oneCount = 0;
    int twoCount = 0;
    Node* temp = head;
    while(temp){
        if(temp->data==0) zeroCount++;
        else if(temp->data==1) oneCount++;
        else twoCount++;
        temp = temp->next;
    }
    temp = head;
    while(temp){
        if(zeroCount){
            temp->data = 0;
            zeroCount--;
        }
        else if(oneCount){
            temp->data = 1;
            oneCount--;
        }
        else if(twoCount){
            temp->data = 2;
            twoCount--;
        }
        temp = temp->next;
    }
    return head;
}

//updating nodes isn't allowed

void insertAtTail(Node* &tail, Node* temp){
    tail->next = temp;
    tail = temp;
}

Node* sortList(Node *head)
{
    // Write your code here.
    Node* zeroHead = new Node(-1);
    Node* zeroTail = zeroHead;
    Node* oneHead = new Node(-1);
    Node* oneTail = oneHead;
    Node* twoHead = new Node(-1);
    Node* twoTail = twoHead;
    Node* temp = head;
    //insert data
    while(temp){
        if(temp->data==0){
            insertAtTail(zeroTail,temp);
        }
        else if(temp->data==1){
            insertAtTail(oneTail,temp);
        }
        else{
            insertAtTail(twoTail,temp);
        }
        temp = temp->next;
    }
    
    //merge lists
    if(oneHead->next!=NULL){
        zeroTail->next = oneHead->next;
        oneTail->next = twoHead->next;
    }
    else{
        zeroTail->next = twoHead->next;
    }
    twoTail->next = NULL;
    
    head = zeroHead->next;
    delete zeroHead;
    delete oneHead;
    delete twoHead;
    return head;
}
