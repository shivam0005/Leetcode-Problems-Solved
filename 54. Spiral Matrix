class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int row = matrix.size();
        int col = matrix[0].size();
        int n = row*col;
        int count = 0;
        int startCol = 0, startRow = 0;
        int endRow = row-1, endCol = col-1;
        vector<int> ans;
        
        while(count < n){
            for(int index=startCol; index<=endCol && count<n; index++){
                ans.push_back(matrix[startRow][index]);
                count++;
            }
            startRow++;
            for(int index=startRow; index<=endRow && count<n; index++){
                ans.push_back(matrix[index][endCol]);
                count++;
            }
            endCol--;
            for(int index=endCol; index>=startCol && count<n; index--){
                ans.push_back(matrix[endRow][index]);
                count++;
            }
            endRow--;
            for(int index=endRow; index>=startRow && count<n; index--){
                ans.push_back(matrix[index][startCol]);
                count++;
            }
            startCol++;
        }
        return ans;
    }
};
