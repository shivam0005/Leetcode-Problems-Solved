#include <iostream>

using namespace std;

void mergeArray(int* arr, int start, int end){
    int mid = start+(end-start)/2;
    int len1 = mid-start+1;
    int len2 = end - mid;
    
    int* first = new int[len1];
    int* second = new int[len2];
    
    //copy value in first array
    int k=start;
    for(int i=0; i<len1; i++){
        first[i]=arr[k++];
    }
    
    //copy value in second array
    
    k = mid+1;
    for(int i=0; i<len2; i++){
        second[i]=arr[k++];
    }
    
    //merge both sorted array
    
    int index1 = 0;
    int index2 = 0;
    k = start;
    while(index1<len1 && index2<len2){
        if(first[index1]<second[index2]){
            arr[k++]=first[index1++];
        }
        else{
            arr[k++]=second[index2++];
        }
    }
    
    while(index1<len1){
        arr[k++]=first[index1++];
    }
    
    while(index2<len2){
        arr[k++]=second[index2++];
    }
    
}

void mergeSort(int* arr, int start, int end){
    if(start>=end){
        return;
    }
    int mid = start+(end-start)/2;
    
    //left part
    
    mergeSort(arr, start, mid);
    
    //right part
    
    mergeSort(arr, mid+1, end);
    
    //merge two sorted array
    
    mergeArray(arr, start, end);
}

int main()
{
    int arr[6] = {5, 2, 9, 5, 1, 0};
    int n = sizeof(arr)/sizeof(arr[0]);
    int start=0, end=n-1;
    mergeSort(arr, start, end);
    
    //printing the array
    for(int i=0; i<n; i++){
        cout << arr[i] << " ";
    }
    return 0;
}
