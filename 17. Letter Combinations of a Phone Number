class Solution {
private:
    void combination(string &digits, string output, int index, vector<string>&ans, string mapping[]){
        if(index>=digits.length()){
            ans.push_back(output);
            return;
        }
        
        int digit = digits[index]-'0';
        string value = mapping[digit];
        for(int i=0; i<value.length(); i++){
            output.push_back(value[i]);
            combination(digits, output, index+1, ans, mapping);
            output.pop_back();
        }
    }
public:
    vector<string> letterCombinations(string digits) {
        vector<string> ans;
        if(digits.length()==0) return ans;
        string output="";
        int index = 0;
        string mapping[10]={"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        combination(digits, output, index, ans, mapping);
        return ans;
    }
};
