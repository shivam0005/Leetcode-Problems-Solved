bool isPossible(vector<int> &stalls, int k, int dist, int n){
    int cowCount =1;
    int co_ord = stalls[0];
    for(int i=1; i<n; i++){
        if(stalls[i]-co_ord >= dist){
            cowCount++;
            co_ord = stalls[i];
        }
        if(cowCount==k) return true;
    }
    return false;
}

int aggressiveCows(vector<int> &stalls, int k)
{
    sort(stalls.begin(), stalls.end());
    int n = stalls.size();
    int start=1, end=stalls[n-1]-stalls[0];
    int ans = -1;
    while(start<=end){
        int dist = start+(end-start)/2;
        if(isPossible(stalls, k, dist, n)){
            ans = dist;
            start=dist+1;
        }
        else{
            end = dist-1;
        }
    }
    return ans;
}
