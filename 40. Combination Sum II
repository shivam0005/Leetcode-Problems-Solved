class Solution {
private:
    void solve(vector<int>& candidates,vector<int>output,int index,int target,vector<vector<int>>& ans){
        if(target==0){
            ans.push_back(output);
            return;
        }
        for(int i=index; i<candidates.size(); i++){
            //avoid duplicacy
            if(i>index && candidates[i]==candidates[i-1]){
                continue;
            }
            if(candidates[i]>target) break;
            output.push_back(candidates[i]);
            solve(candidates,output,i+1,target-candidates[i],ans);
            output.pop_back();   
        }
    }
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(), candidates.end());
        vector<vector<int>> ans;
        vector<int>output;
        int index=0;
        solve(candidates,output,index,target,ans);
        return ans;
    }
};
